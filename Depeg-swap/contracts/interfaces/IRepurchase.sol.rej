diff a/Depeg-swap/contracts/interfaces/IRepurchase.sol b/Depeg-swap/contracts/interfaces/IRepurchase.sol	(rejected hunks)
@@ -1,4 +1,4 @@
-pragma solidity 0.8.24;
+pragma solidity ^0.8.24;
 
 import {Id} from "../libraries/Pair.sol";
 
@@ -16,7 +16,7 @@ interface IRepurchase {
      * @param raUsed the amount of RA used
      * @param received the amount of RA used
      * @param fee the fee charged
-     * @param feePrecentage the fee in precentage
+     * @param feePercentage the fee in percentage
      * @param exchangeRates the effective DS exchange rate at the time of repurchase
      */
     event Repurchased(
@@ -25,7 +25,7 @@ interface IRepurchase {
         uint256 indexed dsId,
         uint256 raUsed,
         uint256 received,
-        uint256 feePrecentage,
+        uint256 feePercentage,
         uint256 fee,
         uint256 exchangeRates
     );
@@ -43,7 +43,7 @@ interface IRepurchase {
     error InsufficientLiquidity(uint256 available, uint256 requested);
 
     /**
-     * @notice returns the fee precentage for repurchasing(1e18 = 1%)
+     * @notice returns the fee percentage for repurchasing(1e18 = 1%)
      * @param id the id of PSM
      */
     function repurchaseFee(Id id) external view returns (uint256);
@@ -53,7 +53,9 @@ interface IRepurchase {
      * @param id the id of PSM
      * @param amount the amount of RA to use
      */
-    function repurchase(Id id, uint256 amount) external;
+    function repurchase(Id id, uint256 amount)
+        external
+        returns (uint256 dsId, uint256 received, uint256 feePercentage, uint256 fee, uint256 exchangeRates);
 
     /**
      * @notice returns the amount of pa and ds tokens that will be received after repurchasing
@@ -61,14 +63,14 @@ interface IRepurchase {
      * @param amount the amount of RA to use
      * @return dsId the id of the DS
      * @return received the amount of RA received
-     * @return feePrecentage the fee in precentage
+     * @return feePercentage the fee in percentage
      * @return fee the fee charged
      * @return exchangeRates the effective DS exchange rate at the time of repurchase
      */
     function previewRepurchase(Id id, uint256 amount)
         external
         view
-        returns (uint256 dsId, uint256 received, uint256 feePrecentage, uint256 fee, uint256 exchangeRates);
+        returns (uint256 dsId, uint256 received, uint256 feePercentage, uint256 fee, uint256 exchangeRates);
 
     /**
      * @notice return the amount of available PA and DS to purchase.
